// Code generated by goa v3.20.1, DO NOT EDIT.
//
// message HTTP client types
//
// Command:
// $ goa gen
// github.com/rkhullar/python-java-scratches/src/main/go/projects/message-api/goa/design

package client

import (
	message "github.com/rkhullar/python-java-scratches/src/main/go/projects/message-api/goa/gen/message"
	messageviews "github.com/rkhullar/python-java-scratches/src/main/go/projects/message-api/goa/gen/message/views"
	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "message" service "create" endpoint
// HTTP request body.
type CreateRequestBody struct {
	// Message text
	Text string `form:"text" json:"text" xml:"text"`
}

// CreateResponseBody is the type of the "message" service "create" endpoint
// HTTP response body.
type CreateResponseBody struct {
	// UUID of the message
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message text
	Text *string `form:"text,omitempty" json:"text,omitempty" xml:"text,omitempty"`
}

// ListResponseBody is the type of the "message" service "list" endpoint HTTP
// response body.
type ListResponseBody []*MessageResponse

// ReadResponseBody is the type of the "message" service "read" endpoint HTTP
// response body.
type ReadResponseBody struct {
	// UUID of the message
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message text
	Text *string `form:"text,omitempty" json:"text,omitempty" xml:"text,omitempty"`
}

// ReadNotFoundResponseBody is the type of the "message" service "read"
// endpoint HTTP response body for the "not_found" error.
type ReadNotFoundResponseBody struct {
	// error message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// MessageResponse is used to define fields on response body types.
type MessageResponse struct {
	// UUID of the message
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Message text
	Text *string `form:"text,omitempty" json:"text,omitempty" xml:"text,omitempty"`
}

// NewCreateRequestBody builds the HTTP request body from the payload of the
// "create" endpoint of the "message" service.
func NewCreateRequestBody(p *message.CreatePayload) *CreateRequestBody {
	body := &CreateRequestBody{
		Text: p.Text,
	}
	return body
}

// NewCreateMessageCreated builds a "message" service "create" endpoint result
// from a HTTP "Created" response.
func NewCreateMessageCreated(body *CreateResponseBody) *messageviews.MessageView {
	v := &messageviews.MessageView{
		ID:   body.ID,
		Text: body.Text,
	}

	return v
}

// NewListMessageOK builds a "message" service "list" endpoint result from a
// HTTP "OK" response.
func NewListMessageOK(body []*MessageResponse) []*message.Message {
	v := make([]*message.Message, len(body))
	for i, val := range body {
		v[i] = unmarshalMessageResponseToMessageMessage(val)
	}

	return v
}

// NewReadMessageOK builds a "message" service "read" endpoint result from a
// HTTP "OK" response.
func NewReadMessageOK(body *ReadResponseBody) *messageviews.MessageView {
	v := &messageviews.MessageView{
		ID:   body.ID,
		Text: body.Text,
	}

	return v
}

// NewReadNotFound builds a message service read endpoint not_found error.
func NewReadNotFound(body *ReadNotFoundResponseBody) *message.NotFoundError {
	v := &message.NotFoundError{
		Message: *body.Message,
	}

	return v
}

// ValidateReadNotFoundResponseBody runs the validations defined on
// read_not_found_response_body
func ValidateReadNotFoundResponseBody(body *ReadNotFoundResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateMessageResponse runs the validations defined on MessageResponse
func ValidateMessageResponse(body *MessageResponse) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Text == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("text", "body"))
	}
	return
}
