// Code generated by goa v3.20.1, DO NOT EDIT.
//
// message HTTP client CLI support package
//
// Command:
// $ goa gen
// github.com/rkhullar/python-java-scratches/src/main/go/projects/message-api/goa/design

package client

import (
	"encoding/json"
	"fmt"
	"unicode/utf8"

	message "github.com/rkhullar/python-java-scratches/src/main/go/projects/message-api/goa/gen/message"
	goa "goa.design/goa/v3/pkg"
)

// BuildCreatePayload builds the payload for the message create endpoint from
// CLI flags.
func BuildCreatePayload(messageCreateBody string) (*message.CreatePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(messageCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"text\": \"g\"\n   }'")
		}
		if utf8.RuneCountInString(body.Text) < 1 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.text", body.Text, utf8.RuneCountInString(body.Text), 1, true))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &message.CreatePayload{
		Text: body.Text,
	}

	return v, nil
}

// BuildReadPayload builds the payload for the message read endpoint from CLI
// flags.
func BuildReadPayload(messageReadID string) (*message.ReadPayload, error) {
	var id string
	{
		id = messageReadID
	}
	v := &message.ReadPayload{}
	v.ID = id

	return v, nil
}
